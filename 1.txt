Что такое Ансибл ? 
Система автоматизации конфигурации и управление сервверами 
Примиер : у меня 100 серверов на который есть ОС и мне как сис.инэенеру надо чтот на них отконфигурировать - прикинь на 100 серверов делать log in , lol. А с ансб я пишу скрипт (понимакт формат yaml ) пишу что хочу установить и ансб делает всё за меня на всех серверах которые я укажу (нужно будет лишь доступ дать) - это полная автоматизация - Кароче ансб это крутая штука для управления серверами .

Все программы управления деляться на 2 группы 
Pull - на управляемых серверах (клиентах) стоит агент которые делает pull настоет мастера (на управ.серверах ктот сделал логин и установил туда агента , хотя зависит от того где я эти сервера поднимал , если в авс то автоматом можно установить эти агенты ) кароче агент делает pull request запрос на конфигурацию у мастера (это шеф , паппет , солтстэк)
Push - на управляемых серверах ничего не надо устанавливать , Master делает push настроек (это ансб)

Как работает ansible ?
я на мастере на котором у мненя есть ансб , и потом на нём создаю запрос на все сервера и серваки устанавливаю всё то что я указал в мастере (в эго playbook)

Минимальные требования Master Server 
1.Linux only 
2.Python 2.6+ or Python 3.5+

		       Control Servers
1. Linux : Admin Username/Password or SSH Key and Python 2.6+
2. Windows : Admin Username/Password , PowerShell 3.0 запусить скрипт /configureremotingforansible.ps1


Работа происходит через порты и протоколы :
Linux -> SSH Port 22 (в firewall надо открыть)
Windows -> WinRM Port 5986 
--------------------------------------------------------------------------------------------------------

Установка Ansible Master 

https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html

при установке via pip не устанавливаеться конфиг-файл 

--------------------------------------------------------------------------------------------------------

Подключение к клиентам (через username/password or ssh-key)
1)мне надо публич ключ клинета закинуть в ansible-mater -> .ssh -> creating file .pem
2) change privalegis - chmod 400 .pem 
3) затем создаю директорию в которой будет мой проект ansible
- работаем с inventory(host.file)-тут те сервера к которым надо подключится с параметрами (username , ip-adres, dns-name, key or password...)
4)Создаю hosts.txt - тут можно писать DNS имена моих серверов или ip-adres
*pass - в тхт храинть не хорошо - volt (install sshpass)
*когда я первый раз конекчусь к серву он просит отпечатки пальцев - это надо избегать 

Как запусить ansible ?
ansible -i (какой инвентори файл используем) hosts.txt all (на все групы в файле)  -m (модуль , тут всё в модулях , в ручной команду всегда будет -m стоять) ping 
ansible -i hosts.txt all -m ping
*я подключался к клиенту через пассвод (так делать нельзя , исправишь дальше это)

*на будущее в моем инвентори файле должны быть только name-computer and ip-adress ! а остальное закину в конфиг файлы (другие)

Как избавитсья от фингерпринта 
Cоздаю ansible.cfg - в той директории в которй есть мой проект , дольше запомни что тут я указываю inventory file в результате чего моя команды становиться очень малой - ansible all -m ping 
*где брать параменты для ansible.cfg - ansible site 

Вывод - я подключился к тачке и могу теперь исполнять не только модуль ping , а установка , копирование кароч всёёёё

----------------------------------------------------------------------------------------------------------

Правила создание файла Inventory(hosts) и что в нём можно делать 
* в прошлых частях я создавал группы и добавлял к ним переменные 

1)все сервера можно записывать без группы (just ip-adress or domain-name) но я использовал elias-name
все сервера в inventory принадлежать 3 группам (all(все) & grouped(те что в группах & ungrouped (те что не в группах)

Наглядный пример как мы создаем группы и что мы в них вкладываем - на практике - это staging and prod
name group - ansible key-sensetive
*все сервера надо делить по группам 

Финт - создать группу all которая будет включать имена серверов всех групп - 
[Staging_ALL:children]
Staging_DB
Name_you_group
Так-же можно создавать общие переменные 
[Staging_example:vars]
ansible_user=jim
ansible_ssh_private_key=~/path

и есть трюк наследование переменных с помощью групп(в которых есть дети) , наследование-наследование ( в будущем в inventory файле должны быть только сервера и ip без переменных 

Как посмотерть все группы , сервера и переменые которые к ним относятся - ansible - inventory --list (посмотреть какие переменны подхвативаются ) | сделать в виде графа(увидеть группы) - ansible-inventory --graph

----------------------------------------------------------------------------------------------------------

Запуск Ad-Hoc Комманд

Что такое ad-hoc - это обичные команды ansible (отдельные команды которые не в playbook но они там те-же)

-m setup - cкинирует серв и выдает данные о нём (ip v4/6 , OS , arch , time , network-cards, dns-name , hostname , kernel-version - эти переменные можно использовать в командах (в playbook) , ansible-os-family...
-m shell -a "uptime" - команды шелла с аргументом 
-m command -a "uptime" - команды линукса только без env , < , >> , > , | , & 
-m copy -a "src=fullpath or corrent directory dest=/home/ mode=777" -b :b-became sudo , summary ,this copy file 
-m file -a "path=/home/hello.txt state=absent" -b : удаление файла (но модулю файл многофункционален (может создавать директории ... )

*огромный плюс ansible - подгоняет все сервера под один паттерн

-m get_url -a "url=https://yoururl.com dest=/home" -b - скачать файл по url
-m apt(yum) -a "name=packename state=latest|installed|removed|absent" -b : удалить или скачать прогу 
-m uri -a "url=http://youurl.com" : проверка того можно-ли подконектиться к этому веб-адресу
-m uri -a "url=https:		 return_content=yes" - возвращает контент (index.html)

-m apt -a "name=apache2 state=latest" -b 
-m service -a "name=apache2 state=started enabled=yes" -b : кароче ты понял

-m shell -a "ls -la /" -vvv (v - config file vv-configfile and version ansible vvv - key, user * -vvvv - super more information - ОЧЕНЬ ПОЛЕЗНО ПРИ ДЕБАГЕ *-vvvvv

ansible-doc -l - all ad-hoc commands (ansible-doc | grep 'win_')

----------------------------------------------------------------------------------------------------------

8-Ansible - Правила Формата YAML - лучше разобрать когда буду писать playbook

.yml - розшерение , начинаеться файл с --- на первой строке , а заканчиваеться ...(хотя можно и не делать)
yml - формат текста в парах (ключ=значение) и листы(списки команды которые буду запускать на ansible одну за другой ) начинаютсья из space -yourcommand 

---

 - command 
 - command1 

example ansible documentation (создать список фруктов)

---

 fruits:
    - apple
    - mango
    - orange

Теперь как создать список в списке fruits ? - надо превратить список в списки :

 - fruits:
   ...

 - vegetables:
   - carrots 
   - cucumber 



Обьяснение - fruits & vegetables - это команды а всё что под ними это их параметры(атребуты)

Другой пример - параметр с листом 

...

 - hero:
    nickname: "Jim:Morrison" 
    position: Writer
    skills:
        - vocal
        - poetry
        - rockstar 

Тоже самое что написано выше только в 1 строку 

- hero: { nickname: Jim, position: Writer, skills: ['vocal', 'poetry', 'rockstar']}

Другой пример в одну строку 

 fruits: ['apple', 'orange', 'mango']

----------------------------------------------------------------------------------------------------------


9-Ansible - Перенос переменных в group_vars

Речь пойдёт об отчистке inventory file (host.txt)
В инвентори файле не должно быть переменых (или их очень мало )

1) в той-же директории где у меня inventory file создаю папку - grou_vars 
2) внутри директории создаю файлы с названием ное группы 
3) закидую переменые моей группы в файл с названием моей группы в созданой директории в формате yml

*если мне нужно для какого-нить спецефич сервера перекинуть переменную то надо указать её в группе послу указание ip адреса сервера 


----------------------------------------------------------------------------------------------------------

10-Ansible - Первые Playbook
*до этого я запускал просто команды ad-hoc - playbook - это скрипт команд

playbook - yml 

1)начинаю с --- 

Дальше что будет делать playbook - 
- name: you text   
На каких он будет чтот запускать 
  hosts: all 
Включение судо 
  became: yes

  tasks: 

после чего пишу команды (ad-hoc - тоесть пишу модули )
  - name: Ping my servers 
и сама команды , у нас пинг (значение осатвнляю пустое , ведь это лишь пинг 
    ping:

Этот playbook очень полезе для статистики pinga (открлыка от большого кол-ва серверов)


Как запустить playbook - ansible-playbook playbook.yml (если не указал в ansible.cfg наш invetory file то надо добавить ещё и hostfile)
Выхлоп
PLAY - название playbook (как я его назвал ) 
TASK(GETHERING FACTS) - идёт запуск подуля setup (пытаеться к серверам приконектиться и взять параметры 
TASK(your personal task) - тут идёт указание хостов на которых получилось сделать то что надо было сделать 
RECAP - тут более подробно идёт описание того что ввыше)

***Теперь создам playbook на который установлю веб-сервер
